{"version":3,"sources":["components/Cell.jsx","audio/click.mp3","audio/win.mp3","audio/tie.mp3","components/Field.jsx","components/Header.jsx","rs_school_js.svg","components/Footer.jsx","App.js","index.js"],"names":["Cell","onClick","value","Gameinfo","player","firstValue","result","className","Field","state","field","gameover","soundClick","audio","Audio","src","autoplay","soundWin","soundTie","gameOver","i","length","undefined","setState","counter","j","handleClick","rowIndex","columnIndex","currentValue","props","currentPlayer","newField","slice","prevState","this","newGame","mode","clearField","map","Component","Header","sound","toggleSounds","switchAudio","changeActiveParam","e","elementsSelector","activeClass","param","document","querySelectorAll","forEach","elem","classList","remove","target","add","changeMode","changeValue","startNewGame","Footer","href","rel","logo","alt","App","useState","setMode","setValue","setNewGame","setAudio","modeType","newValue","audioMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b5035dd2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cell.css';\r\n\r\nconst Cell = ({ onClick, value }) => {\r\n    return <td onClick={onClick}>{value}</td>;\r\n}\r\n\r\nexport default Cell;","export default __webpack_public_path__ + \"static/media/click.37b199d5.mp3\";","export default __webpack_public_path__ + \"static/media/win.6dc2f4de.mp3\";","export default __webpack_public_path__ + \"static/media/tie.0d5f1e37.mp3\";","import React, { Component } from 'react';\r\nimport Cell from './Cell.jsx';\r\nimport './Field.css';\r\nimport soundClick from '../audio/click.mp3';\r\nimport soundWin from '../audio/win.mp3'\r\nimport soundTie from '../audio/tie.mp3'\r\n\r\nconst Gameinfo = ({ player, value, firstValue, result }) => {\r\n    if (!result) {\r\n        return <p className=\"info\">{player} ({!value ? firstValue : value})</p>\r\n    } else {\r\n        return <p className=\"info\">{result}</p>\r\n    }\r\n}\r\n\r\nclass Field extends Component {\r\n    state = {\r\n        player: 'Player 1',\r\n        field: [[], [], []],\r\n        result: '',\r\n        value: '',\r\n        gameover: false,\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        if (this.props.newGame !== prevState.newGame ||\r\n            this.props.value !== prevState.value ||\r\n            this.props.mode !== prevState.mode) {\r\n            this.setState({\r\n                player: 'Player 1',\r\n                field: [[], [], []],\r\n                result: '',\r\n                value: '',\r\n                gameover: false,\r\n            });\r\n            \r\n            this.props.clearField();\r\n        }\r\n    }\r\n\r\n    soundClick = () => {\r\n        const audio = new Audio();\r\n        audio.src = soundClick;\r\n        audio.autoplay = true;\r\n    }\r\n\r\n    soundWin = () => {\r\n        const audio = new Audio();\r\n        audio.src = soundWin;\r\n        audio.autoplay = true;\r\n    }\r\n\r\n    soundTie = () => {\r\n        const audio = new Audio();\r\n        audio.src = soundTie;\r\n        audio.autoplay = true;\r\n    }\r\n\r\n    gameOver = (field, audio, player) => {\r\n        for (let i = 0; i < field.length; i++) {\r\n            if ((field[i][0] === field[i][1] && field[i][0] === field[i][2] && field[i][0] !== undefined) ||\r\n                (field[0][i] === field[1][i] && field[0][i] === field[2][i] && field[0][i] !== undefined) ||\r\n                (field[0][0] === field[1][1] && field[1][1] === field[2][2] && field[0][0] !== undefined) ||\r\n                (field[0][2] === field[1][1] && field[1][1] === field[2][0] && field[0][2] !== undefined)) {                \r\n                    \r\n                    this.setState({\r\n                        result: `WINNER - ${player}`,\r\n                        gameover: true,\r\n                    })\r\n\r\n                    if (audio) {\r\n                        this.soundWin();\r\n                    }\r\n                    \r\n                    return;\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n        \r\n        for (let i = 0; i < field.length; i++) {\r\n            for (let j = 0; j < field.length; j++) {\r\n                if (field[i][j] !== undefined) counter++;\r\n            }\r\n        }\r\n\r\n        if (counter === 9) {\r\n            this.setState({\r\n                result: `TIE`,\r\n                gameover: true,\r\n            })\r\n\r\n            if (audio) {\r\n                this.soundTie();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick = (rowIndex, columnIndex) => {\r\n        const { player, field, value, gameover } = this.state;\r\n        const { audio } = this.props;\r\n        let currentPlayer = player;\r\n        const newField = field.slice();\r\n        let currentValue;\r\n        if (!value) {\r\n            currentValue = this.props.value;\r\n        } else {\r\n            currentValue = value;\r\n        }\r\n        \r\n        if (!gameover) {    \r\n            if (!field[rowIndex][columnIndex]) {\r\n                newField[rowIndex][columnIndex] = currentValue;\r\n\r\n                if (currentPlayer === 'Player 1') {\r\n                    currentPlayer = 'Player 2';\r\n                } else {\r\n                    currentPlayer = 'Player 1'\r\n                }\r\n\r\n                if (currentValue === 'X') {\r\n                    currentValue = 'O';\r\n                } else {\r\n                    currentValue = 'X'\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                player: currentPlayer,\r\n                field: newField,\r\n                value: currentValue,\r\n            })\r\n\r\n            if (audio) {\r\n                this.soundClick();\r\n            }\r\n            \r\n            this.gameOver(field, audio, player);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"main\">\r\n                <div className=\"game-info\">\r\n                    <Gameinfo \r\n                        result={this.state.result}\r\n                        player={this.state.player}\r\n                        value={this.state.value}\r\n                        firstValue={this.props.value}\r\n                    />\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                        {[0, 1, 2].map(rowIndex => (\r\n                            <tr key={rowIndex}>\r\n                                {[0, 1, 2].map(columnIndex => (\r\n                                    <Cell\r\n                                        key={`${rowIndex}${columnIndex}`}\r\n                                        onClick={() => this.handleClick(rowIndex, columnIndex)} \r\n                                        value={this.state.field[rowIndex][columnIndex]}\r\n                                    />\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Field;","import React, { Component } from 'react';\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        sound: true,\r\n    }\r\n\r\n    toggleSounds = () => {\r\n        if (this.state.sound) {\r\n            this.setState({\r\n                sound: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                sound: true,\r\n            })\r\n        }\r\n\r\n        this.props.switchAudio(!this.state.sound);\r\n    }\r\n\r\n    changeActiveParam = (e, elementsSelector, activeClass, param) => {\r\n        const elemArr = document.querySelectorAll(elementsSelector);\r\n        elemArr.forEach(elem => elem.classList.remove(activeClass));\r\n        e.target.classList.add(activeClass);\r\n        if (param === 'PvC' || param === 'PvP') {\r\n            this.props.changeMode(param);\r\n        } else if (param ===  'X' || param === 'O') {\r\n            this.props.changeValue(param);\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"title\">TIC TAC TOE</h1>\r\n                <button className=\"sound-switcher\" onClick={this.toggleSounds}>Sound: {this.state.sound ? 'ON' : \"OFF\"}</button>\r\n                <div className=\"game-modes\">\r\n                    <h2 className=\"game-modes__title\">Choose mode:</h2>\r\n                    <ul className=\"game-modes__list\">\r\n                        <li className=\"game-modes__button\" onClick={(e) => this.changeActiveParam(e, \".game-modes__button\", \"active\", \"PvC\")}>Player vs Computer</li>\r\n                        <li className=\"game-modes__button active\" onClick={(e) => this.changeActiveParam(e, \".game-modes__button\", \"active\", \"PvP\")}>Player vs Player</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"elements-types\">\r\n                    <h2 className=\"elements-types__title\">Choose your Champion:</h2>\r\n                    <ul className=\"elements-types__list\">\r\n                        <li className=\"element-types active\" onClick={(e) => this.changeActiveParam(e, \".element-types\", \"active\", \"X\")}>X</li>\r\n                        <li className=\"element-types\" onClick={(e) => this.changeActiveParam(e, \".element-types\", \"active\", \"O\")}>O</li>\r\n                    </ul>\r\n                </div>\r\n                <button className=\"new-game\" onClick={() => this.props.startNewGame(true)}>New game</button>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React, { Component } from 'react';\r\nimport './Footer.css'\r\nimport logo from '../rs_school_js.svg';\r\n\r\nclass Footer extends Component {\r\n    render () {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <p className=\"autor\">Directed by\r\n                    <a className=\"author-link\" href=\"https://github.com/VladMeleshko\" target=\"_blank\" rel=\"noreferrer noopener\"> Vlad Meleshko</a>, 2021\r\n                </p>\r\n                <a className=\"school-logo\" href=\"https://rs.school/js/\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n                    <img src={logo} alt=\"school-logo\" className=\"school-logo__img\" />\r\n                </a>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import './App.css';\nimport Field from './components/Field.jsx';\nimport Header from './components/Header.jsx';\nimport Footer from './components/Footer.jsx';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [mode, setMode] = useState('PvP');\n  const [value, setValue] = useState('X');\n  const [newGame, setNewGame] = useState(false);\n  const [audio, setAudio] = useState(true);\n\n  return (\n    <div className=\"app\">\n      <Header \n        changeMode={(modeType) => setMode(modeType)}\n        changeValue={(newValue) => setValue(newValue)}\n        startNewGame={(newGame) => setNewGame(newGame)}\n        switchAudio={(audioMode) => setAudio(audioMode)}\n      />\n      <Field \n        mode={mode}\n        value={value}\n        newGame={newGame}\n        audio={audio}\n        clearField={(newGame => setNewGame(newGame))}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}